---
  - name: Hetzner Tasks on Master
    hosts: master
    remote_user: root
    tasks:
      - name: Install CNI
        shell: 
          cmd: |
            openssl req -newkey rsa:4096 \
                        -keyout cni.key \
                        -nodes \
                        -out cni.csr \
                        -subj "/CN=calico-cni"
            openssl x509 -req -in cni.csr \
                            -CA /etc/kubernetes/pki/ca.crt \
                            -CAkey /etc/kubernetes/pki/ca.key \
                            -CAcreateserial \
                            -out cni.crt \
                            -days 365
            chown ubuntu:ubuntu cni.crt
            APISERVER=$(kubectl config view -o jsonpath='{.clusters[0].cluster.server}')
            kubectl config set-cluster kubernetes \
                --certificate-authority=/etc/kubernetes/pki/ca.crt \
                --embed-certs=true \
                --server=$APISERVER \
                --kubeconfig=cni.kubeconfig
            kubectl config set-credentials calico-cni \
                --client-certificate=cni.crt \
                --client-key=cni.key \
                --embed-certs=true \
                --kubeconfig=cni.kubeconfig
            kubectl config set-context default \
                --cluster=kubernetes \
                --user=calico-cni \
                --kubeconfig=cni.kubeconfig
            kubectl config use-context default --kubeconfig=cni.kubeconfig
            kubectl apply -f - <<EOF
            kind: ClusterRole
            apiVersion: rbac.authorization.k8s.io/v1
            metadata:
            name: calico-cni
            rules:
            # The CNI plugin needs to get pods, nodes, and namespaces.
            - apiGroups: [""]
                resources:
                - pods
                - nodes
                - namespaces
                verbs:
                - get
            # The CNI plugin patches pods/status.
            - apiGroups: [""]
                resources:
                - pods/status
                verbs:
                - patch
            # These permissions are required for Calico CNI to perform IPAM allocations.
            - apiGroups: ["crd.projectcalico.org"]
                resources:
                - blockaffinities
                - ipamblocks
                - ipamhandles
                verbs:
                - get
                - list
                - create
                - update
                - delete
            - apiGroups: ["crd.projectcalico.org"]
                resources:
                - ipamconfigs
                - clusterinformations
                - ippools
                verbs:
                - get
                - list
            EOF
            kubectl create clusterrolebinding calico-cni --clusterrole=calico-cni --user=calico-cni


  - name: Copy current cni.kubeconfig file from master to local
    hosts: master
    remote_user: root
    tasks: 
      - name: Copy current cni.kubeconfig file from master to local
        synchronize:  src={{ item }} dest=./files/ mode=pull
        with_items: 
          - /root/cni.kubeconfig

  - name: Copy the file from local to workers
    hosts: worker
    remote_user: root
    tasks: 
      - name: Copy the file from local to workers
        copy: 
            src: files/cni.kubeconfig 
            dest: /root/
            force: yes



  - name: Hetzner Tasks on All
    hosts: all,!localhost
    remote_user: root
    tasks:
      - name: Install CNI
        shell: 
          cmd: |
            mkdir -p /opt/cni/bin/
            curl -L -o /opt/cni/bin/calico https://github.com/projectcalico/cni-plugin/releases/download/v3.14.0/calico-amd64
            chmod 755 /opt/cni/bin/calico
            curl -L -o /opt/cni/bin/calico-ipam https://github.com/projectcalico/cni-plugin/releases/download/v3.14.0/calico-ipam-amd64
            chmod 755 /opt/cni/bin/calico-ipam
            mkdir -p /etc/cni/net.d/
            cp cni.kubeconfig /etc/cni/net.d/calico-kubeconfig
            chmod 600 /etc/cni/net.d/calico-kubeconfig

      - name: Install 10-calico.conflist
        shell: 
          cmd: |
            cat <<EOF | tee /etc/cni/net.d/10-calico.conflist
            {
            "name": "k8s-pod-network",
            "cniVersion": "0.3.1",
            "plugins": [
                {
                "type": "calico",
                "log_level": "info",
                "datastore_type": "kubernetes",
                "mtu": 1500,
                "ipam": {
                    "type": "calico-ipam"
                },
                "policy": {
                    "type": "k8s"
                },
                "kubernetes": {
                    "kubeconfig": "/etc/cni/net.d/calico-kubeconfig"
                }
                },
                {
                "type": "portmap",
                "snat": true,
                "capabilities": {"portMappings": true}
                }
            ]
            }
            EOF


